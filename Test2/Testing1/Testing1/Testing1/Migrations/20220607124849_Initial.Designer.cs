// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Testing1.Models;

namespace Testing1.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20220607124849_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Testing1.Models.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountID");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountID = 1,
                            AccountMail = "Master@gmail.com",
                            AccountName = "Admin",
                            Password = "Admin"
                        },
                        new
                        {
                            AccountID = 2,
                            AccountMail = "Moh6719@gmail.com",
                            AccountName = "Mohamad",
                            Password = "12345"
                        });
                });

            modelBuilder.Entity("Testing1.Models.LoginViewModel", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("RememberMe")
                        .HasColumnType("bit");

                    b.HasKey("Email", "Password");

                    b.ToTable("Login");

                    b.HasData(
                        new
                        {
                            Email = "Admin@gmail.com",
                            Password = "Admin@1",
                            RememberMe = false
                        });
                });

            modelBuilder.Entity("Testing1.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("imageURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Category = "Laptop",
                            Name = "Acer 2",
                            Price = 450m
                        },
                        new
                        {
                            ProductID = 2,
                            Category = "Laptop",
                            Name = "Lenovo Thinkpad 3",
                            Price = 580m
                        },
                        new
                        {
                            ProductID = 3,
                            Category = "PC",
                            Name = "Lenovo X2",
                            Price = 300m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
